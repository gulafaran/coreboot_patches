From 9413254f00d3848b6719b8088b64959db821bc4e Mon Sep 17 00:00:00 2001
From: Tom Englund <tomenglund26@gmail.com>
Date: Tue, 15 Dec 2020 13:18:01 +0100
Subject: [PATCH] add plot to cmos

---
 src/mainboard/lenovo/x230/cmos.default          |  1 +
 src/mainboard/lenovo/x230/cmos.layout           |  1 +
 .../intel/sandybridge/raminit_common.c          | 17 +++++++++++++++--
 3 files changed, 17 insertions(+), 2 deletions(-)

diff --git a/src/mainboard/lenovo/x230/cmos.default b/src/mainboard/lenovo/x230/cmos.default
index 3cbdd20d1b..d5af3dba4b 100644
--- a/src/mainboard/lenovo/x230/cmos.default
+++ b/src/mainboard/lenovo/x230/cmos.default
@@ -21,3 +21,4 @@ mem_cmdrate=Auto
 mem_srt=Enable
 force_mem_training=Disable
 turbo_overclock=Disable
+plot_ram_training=Disable
diff --git a/src/mainboard/lenovo/x230/cmos.layout b/src/mainboard/lenovo/x230/cmos.layout
index 074f05c369..2adb392c9d 100644
--- a/src/mainboard/lenovo/x230/cmos.layout
+++ b/src/mainboard/lenovo/x230/cmos.layout
@@ -44,6 +44,7 @@ entries
 438	1	e	1	force_mem_training
 439	1	e	1	mem_srt
 428	1	e	1	turbo_overclock
+429	1	e	1	plot_ram_training
 
 440	8	h	0	volume
 
diff --git a/src/northbridge/intel/sandybridge/raminit_common.c b/src/northbridge/intel/sandybridge/raminit_common.c
index 9dcde41847..6589ff974d 100644
--- a/src/northbridge/intel/sandybridge/raminit_common.c
+++ b/src/northbridge/intel/sandybridge/raminit_common.c
@@ -2453,8 +2453,15 @@ int read_mpr_training(ramctr_timing *ctrl)
 static int find_agrsv_read_margin(ramctr_timing *ctrl, int channel, int slotrank, int *edges)
 {
 	const int rd_vref_offsets[] = { 0, 0xc, 0x2c };
+	u8 plot_ram_training;
+	bool sweep_vref = CONFIG(RAMINIT_PLOT_READ_MARGINS);
+
+	if(get_option(&plot_ram_training, "plot_ram_training") == CB_SUCCESS) {
+		if(plot_ram_training == 0) {
+			sweep_vref = false;
+		}
+	}
 
-	const bool sweep_vref = CONFIG(RAMINIT_PLOT_READ_MARGINS);
 
 	u32 raw_stats[MAX_EDGE_TIMING + 1];
 	int lower[NUM_LANES];
@@ -2712,8 +2719,14 @@ static void set_write_vref(const int channel, const u8 wr_vref)
 int aggressive_write_training(ramctr_timing *ctrl)
 {
 	const u8 wr_vref_offsets[3] = { 0, 0x0f, 0x2f };
+	u8 plot_ram_training;
+	bool sweep_vref = CONFIG(RAMINIT_PLOT_WRITE_MARGINS);
 
-	const bool sweep_vref = CONFIG(RAMINIT_PLOT_WRITE_MARGINS);
+	if(get_option(&plot_ram_training, "plot_ram_training") == CB_SUCCESS) {
+		if(plot_ram_training == 0) {
+			sweep_vref = false;
+		}
+	}
 
 	int i, pat;
 
-- 
2.29.2

